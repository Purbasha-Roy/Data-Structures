//Creating triplet class
#include<iostream>
using namespace std;
template <typename T, typename V, typename U>
class Triplet{
    T x;
    V y;
    U z;
    public:
    void setX(T x){
        this->x=x;
    }
    T getX(){
        return x;
    }
    void setY(V y){
        this->y=y;
    }
    V getY(){
        return y;
    }
    void setZ(U z){
        this->z=z;
    }
    U getZ(){
        return z;
    }
};
int main(){
    Triplet<float,char,int> t1;
    t1.setX(10.788);
    t1.setY('c');
    t1.setZ(23);
    cout<<t1.getX()<<" "<<t1.getY()<<" "<<t1.getZ();
    return 0;
}

//Creating triplet using pair
#include<iostream>
using namespace std;
template <typename T, typename V>
class Pair{
    T x;
    V y;
    public:
    void setX(T x){
        this->x=x;
    }
    T getX(){
        return x;
    }
    void setY(V y){
        this->y=y;
    }
    V getY(){
        return y;
    }
};
int main(){
    Pair<Pair<int,int>,int> p1;
    p1.setY(10);
    Pair<int,int> p2;
    p2.setX(34);
    p2.setY(78);
    p1.setX(p2);
    cout<<p1.getX().getX()<<" "<<p1.getX().getY()<<" "<<p1.getY();
    return 0;
}
