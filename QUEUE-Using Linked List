//Using Linked List
class Queue {
	// Define the data members
	Node *head;
	Node *tail;
	int size;

   public:
    Queue() {
		// Implement the Constructor
		head=NULL;
		tail=NULL;
		size=0;
	}
	/*----------------- Public Functions of Stack -----------------*/

	int getSize() {
		// Implement the getSize() function
		return size;
	}

    bool isEmpty() {
		// Implement the isEmpty() function
		return size==0;
	}

    void enqueue(int data) {
		// Implement the enqueue() function
		Node *newnode=new Node(data);
		if(head==NULL){
			head=newnode;
			tail=newnode;
			size++;
		}
		else{
		tail->next=newnode;
		tail=newnode;
		size++;
		}
	}

    int dequeue() {
        // Implement the dequeue() function
		if(size==0){
			return -1;
		}
		Node *p=head;
		int ans=head->data;
		head=head->next;
		delete p;
		size--;
		return ans;
    }

    int front() {
        // Implement the front() function
		if(isEmpty()){
			return -1;
		}
		return head->data;
    }
};
