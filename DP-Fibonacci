#include <iostream>
using namespace std;
// Using Brute Force
int fibo(int n){
    if(n<=1){
        return n;
    }
    return fibo(n-1)+fibo(n-2);
}

// Using Memoization
int fibo_helper(int *ans,int n){
    if(n<=1){
        return n;
    }
    
    if(ans[n]!=-1){
        return ans[n];
    }
    
    int a=fibo_helper(ans,n-1);
    int b=fibo_helper(ans,n-2);
    
    ans[n]=a+b;
    return ans[n];
}
int fibo(int n){
    int *ans=new int[n+1];
    for(int i=0;i<=n;i++){
        ans[i]=-1;
    }
    return fibo_helper(ans,n);
}


//USING DP
int fibo(int n){
    int *ans=new int[n+1];
    ans[0]=0;
    ans[1]=1;
    for(int i=2;i<=n;i++){
        ans[i]=ans[i-1]+ans[i-2];
    }
    return ans[n];
}
int main() {
    int ans=fibo(6);
    cout<<ans;
    return 0;
}
