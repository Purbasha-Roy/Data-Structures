//Implementing top,push,pop,size,isEmpty function using dynamic array
#include<iostream>
using namespace std;
class StackUsingArrays{
    int *data;
    int nextIndex;
    int capacity;
    
public:
    StackUsingArrays(){
        data=new int[4];
        nextIndex=0;
        capacity=4;
    }
    int size(){
        return nextIndex;
    }
    bool isEmpty(){
        return nextIndex==0;
    }
    void push(int element){
        if(nextIndex==capacity){
            int *newdata=new int[2*capacity];
            for(int i=0;i<capacity;i++){
                newdata[i]=data[i];
            }
            capacity=capacity*2;
            delete [] data;
            data=newdata;
        }
        data[nextIndex]=element;
        nextIndex++;
    }
    int pop(){
        if(isEmpty()){
            cout<<"The stack is empty"<<endl;
            return -1;
        }
        nextIndex--;
        return data[nextIndex];
    }
    int top(){
        if(isEmpty()){
            cout<<"The stack is Empty"<<endl;
            return -1;
        }
        return data[nextIndex-1];
    }
};
int main(){
    StackUsingArrays s;
    s.push(10);
    s.push(20);
    s.push(30);
    s.push(40);
    s.push(50);
    cout<<s.top()<<endl;
    cout<<s.pop()<<endl;
    cout<<s.pop()<<endl;
    cout<<s.size()<<endl;
    cout<<s.isEmpty()<<endl;
    return 0;
}
